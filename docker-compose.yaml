services:
  newssearch:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./newssearch:/home/newssearch
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - path: .env.defaults
        required: true
      - path: .env
        required: false
    command: python manage.py runserver
    networks:
      - news_default

  elasticsearch:
    image: elasticsearch:9.1.3
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
    networks:
      - news_default

  kibana:
    image: kibana:9.1.3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - news_default

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    networks:
      - news_default

networks:
  news_default:

volumes:
  esdata:
  prometheus_data:
